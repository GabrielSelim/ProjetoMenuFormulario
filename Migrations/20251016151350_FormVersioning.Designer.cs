// <auto-generated />
using System;
using FormEngineAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormEngineAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251016151350_FormVersioning")]
    partial class FormVersioning
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FormEngineAPI.Models.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("FormEngineAPI.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsLatest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("OriginalFormId")
                        .HasColumnType("int");

                    b.Property<string>("RolesAllowed")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SchemaJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("OriginalFormId");

                    b.HasIndex("OriginalFormId", "IsLatest");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("FormEngineAPI.Models.FormSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DataJson")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<DateTime?>("DataSubmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnderecoIp")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("FormVersion")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MotivoRejeicao")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("OriginalFormId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioAprovadorId")
                        .HasColumnType("int");

                    b.Property<int>("Versao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("DataAprovacao");

                    b.HasIndex("DataSubmissao");

                    b.HasIndex("Excluido");

                    b.HasIndex("Status");

                    b.HasIndex("UsuarioAprovadorId");

                    b.HasIndex("FormId", "Status");

                    b.HasIndex("UserId", "Status");

                    b.ToTable("FormSubmissions");
                });

            modelBuilder.Entity("FormEngineAPI.Models.HistoricoFormSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Acao")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("DadosAlteracao")
                        .HasColumnType("JSON");

                    b.Property<DateTime>("DataAcao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnderecoIp")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("FormSubmissionId")
                        .HasColumnType("int");

                    b.Property<int?>("NovoStatus")
                        .HasColumnType("int");

                    b.Property<int?>("StatusAnterior")
                        .HasColumnType("int");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Acao");

                    b.HasIndex("DataAcao");

                    b.HasIndex("FormSubmissionId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("FormSubmissionId", "DataAcao");

                    b.ToTable("HistoricoFormSubmissions");
                });

            modelBuilder.Entity("FormEngineAPI.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FormVersion")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalFormId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("RolesAllowed")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UrlOrPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("UseLatestVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("OriginalFormId");

                    b.HasIndex("ParentId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("FormEngineAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 16, 15, 13, 49, 860, DateTimeKind.Utc).AddTicks(5513),
                            Email = "admin@formengine.com",
                            Name = "Admin",
                            PasswordHash = "$2a$11$UfGeH305iO.rGe.dFrURL.AAewIx7Gfd/4iDejjJD/rGeHZTY3u8a",
                            Role = "admin",
                            UpdatedAt = new DateTime(2025, 10, 16, 15, 13, 49, 860, DateTimeKind.Utc).AddTicks(5519)
                        });
                });

            modelBuilder.Entity("FormEngineAPI.Models.ActivityLog", b =>
                {
                    b.HasOne("FormEngineAPI.Models.User", "User")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FormEngineAPI.Models.Form", b =>
                {
                    b.HasOne("FormEngineAPI.Models.Form", "OriginalForm")
                        .WithMany("Versions")
                        .HasForeignKey("OriginalFormId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OriginalForm");
                });

            modelBuilder.Entity("FormEngineAPI.Models.FormSubmission", b =>
                {
                    b.HasOne("FormEngineAPI.Models.Form", "Form")
                        .WithMany("FormSubmissions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormEngineAPI.Models.User", "User")
                        .WithMany("FormSubmissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormEngineAPI.Models.User", "UsuarioAprovador")
                        .WithMany()
                        .HasForeignKey("UsuarioAprovadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Form");

                    b.Navigation("User");

                    b.Navigation("UsuarioAprovador");
                });

            modelBuilder.Entity("FormEngineAPI.Models.HistoricoFormSubmission", b =>
                {
                    b.HasOne("FormEngineAPI.Models.FormSubmission", "FormSubmission")
                        .WithMany("Historicos")
                        .HasForeignKey("FormSubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormEngineAPI.Models.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormSubmission");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FormEngineAPI.Models.Menu", b =>
                {
                    b.HasOne("FormEngineAPI.Models.Form", "OriginalForm")
                        .WithMany()
                        .HasForeignKey("OriginalFormId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FormEngineAPI.Models.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OriginalForm");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("FormEngineAPI.Models.Form", b =>
                {
                    b.Navigation("FormSubmissions");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("FormEngineAPI.Models.FormSubmission", b =>
                {
                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("FormEngineAPI.Models.Menu", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("FormEngineAPI.Models.User", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("FormSubmissions");
                });
#pragma warning restore 612, 618
        }
    }
}
